[{"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/index.tsx":"1","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/reportWebVitals.ts":"2","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/App.tsx":"3","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Login.tsx":"4","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Home.tsx":"5","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Feed.tsx":"6","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Search.tsx":"7","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Reg.tsx":"8","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/components/Footer.tsx":"9","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/components/nav.tsx":"10"},{"size":554,"mtime":1675810042713,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1675810042715,"results":"13","hashOfConfig":"12"},{"size":1373,"mtime":1679696784574,"results":"14","hashOfConfig":"12"},{"size":1497,"mtime":1679691802490,"results":"15","hashOfConfig":"12"},{"size":760,"mtime":1677261120482,"results":"16","hashOfConfig":"12"},{"size":29044,"mtime":1677786953983,"results":"17","hashOfConfig":"12"},{"size":6693,"mtime":1679696647830,"results":"18","hashOfConfig":"12"},{"size":2029,"mtime":1679691802491,"results":"19","hashOfConfig":"12"},{"size":759,"mtime":1677786953982,"results":"20","hashOfConfig":"12"},{"size":1942,"mtime":1679691802490,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1639ha1",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/index.tsx",[],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/reportWebVitals.ts",[],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/App.tsx",["53","54","55"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Login.tsx",["56"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Home.tsx",["57"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Feed.tsx",["58","59"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Search.tsx",["60","61","62","63"],[],"\n// import React, {SyntheticEvent, useState} from 'react'\n// import {Link} from \"react-router-dom\";\n\n\n// const Search = () => {\n\n//     const [song, setSong] = useState('');\n\n// const handleClick = () => { \n//     console.log(\"present following feed\");\n// };\n\n// const submit = (e: SyntheticEvent) => {\n//     e.preventDefault();\n\n//     console.log({\n//        song\n//     })\n// }\n\n//     return (\n\n//     <form onSubmit = {submit}>\n//         <h1 className=\"text\" >Search for your song of the day</h1>\n//         <input type=\"song\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Search song\" required/>\n\n//         <Link to=\"/feed\">\n//             <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\" onClick={handleClick}>submit song</button>\n//         </Link>  \n\n//     </form>\n\n    \n\n\nimport React, { useEffect, SyntheticEvent, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Form, InputGroup, FormControl, Button, Row, Card} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nconst CLIENT_ID = \"d2db8ba7df624158987b5068d737afd7\";\nconst CLIENT_SECRET = \"3a1c96cb492f4750aa714c23b587e5b6\";\n\n\nconst Search = () => {\n    const [name, setName] = useState('');\n\n    const handleClick = () => { \n    console.log(\"present following feed\");\n};\n\n\n\n// this is the stuff that chandini and anisha did, but it conflicts with calling an api\n\n    useEffect(() => {\n        (\n            async () => {\n                const reponse = await fetch('http://localhost:8000/api/user', {\n                    headers: {'Content-Type' : 'application/json'}, \n                    credentials : 'include',\n                });\n\n                const content = await reponse.json();\n                setName(content.name);\n            }\n        )();\n    });\n\n\n\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [accessToken, setAccessToken] = useState(\"\");\n    const [albums, setAlbums] = useState<any[]>([]);\n\n    useEffect(() => {\n        (\n            async () => {\n                const reponse = await fetch('http://localhost:8000/api/user', {\n                    headers: {'Content-Type' : 'application/json'}, \n                    credentials : 'include',\n                });\n        \n                const content = await reponse.json();\n                setName(content.name);\n                } )();\n                \n        var authParameters = {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/x-www-form-urlencoded'\n            },\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\n        }\n        fetch('https://accounts.spotify.com/api/token', authParameters)\n            .then(result => result.json())\n            .then(data => setAccessToken(data.access_token))\n    }, [])\n\n    // Search\n    async function search() {\n        console.log(\"Search for \" + searchInput);\n\n        // Get request using search to get Artist ID\n        var searchParameters = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        }\n\n        \n\n        // for albums\n        \n        /*\n        var artistID = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist', searchParameters)\n            .then(response => response.json())\n            .then(data => { return data.artists.items[0].id})\n\n        console.log(\"Artist ID is \" + artistID);   \n\n        // Get request with Artist ID to grab all the albums from that artist\n        // do include_groups=album,single for individual songs as well\n        var returnedAlbums = await fetch('https://api.spotify.com/v1/artists/' + artistID + '/albums' + '?include_groups=album,single&market=US&limit=50&include_external=audio', searchParameters)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setAlbums(data.items);\n            });\n            */\n            \n\n        // searches for songs, as well as artist secondhandedly   \n        var trackID = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track&market=US&limit=48&include_external=audio', searchParameters)\n            .then(response => response.json())\n            .then(data => { \n                console.log(data);\n                setAlbums(data.tracks.items);\n                // return data.tracks.items[0].id\n            })\n    }\n\n\n\n    console.log(albums);\n    return (\n\n    <div>\n        <h1 className=\"text\" >Daily Song Picker</h1>\n\n        {/* <input type=\"name\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Search song\" required/> */}\n        <div>\n            {name ? \"Hi \" + name : \"You are not logged in\"}\n        </div>\n        \n        <Container>\n            <InputGroup className= \"mb-3\" size=\"lg\">\n                <Form.Control \n                    placeholder = \"Search Songs/Artists\"\n                    type=\"input\"\n                    onKeyPress={event => {\n                        if (event.key ==\"Enter\") {\n                            search();\n                        }\n                    }}\n                    onChange={event => {\n                        setSearchInput(event.target.value);\n                        console.log('input: ' + searchInput);\n                        search();\n                    }\n                    }\n                    />\n                <Button onClick ={search}>Search</Button>\n            </InputGroup>\n            <Link to=\"/feed\">\n             <button className=\"w-100 btn btn-lg btn-primary my-2\" type=\"submit\" onClick={handleClick}>Submit Song/Go to Feed</button>\n         </Link>  \n        </Container>\n        <div className='searchResults'>   \n        <Container className= \"cards\">\n            <Row className=\"mx-1 row gx-0 row-cols-6 my-5\">\n                {albums.map( (song, i) => {\n                    console.log('song: ' + song);\n                    return (\n                        <Card>\n                            <Card.Img src={song.album.images[0].url} />\n                            <Card.Body className = \"mx-0\">\n                                <Card.Title className= \"gx-1\"><h6>{song.name}</h6></Card.Title>\n                                <Card.Text className = \"gx-5\">{song.artists[0].name}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    )\n                })}\n            </Row>\n        </Container>\n        </div>\n        \n        \n        \n\n        \n    </div>\n    \n     );\n };\n\nexport default Search;","/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/pages/Reg.tsx",["64"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/components/Footer.tsx",["65","66"],[],"/Users/anishapaul/Documents/GitHub/SWEProject/frontend/swe-frontend/src/components/nav.tsx",["67","68"],[],{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":13,"column":11,"nodeType":"71","messageId":"72","endLine":13,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":22,"column":7,"nodeType":"71","messageId":"72","endLine":22,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"76","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"75","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"78","line":37,"column":28,"nodeType":"71","messageId":"72","endLine":37,"endColumn":42},{"ruleId":"69","severity":1,"message":"79","line":39,"column":38,"nodeType":"71","messageId":"72","endLine":39,"endColumn":49},{"ruleId":"69","severity":1,"message":"80","line":126,"column":13,"nodeType":"71","messageId":"72","endLine":126,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":154,"column":39,"nodeType":"83","messageId":"84","endLine":154,"endColumn":41},{"ruleId":"69","severity":1,"message":"77","line":3,"column":9,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"85","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":2,"column":16,"nodeType":"71","messageId":"72","endLine":2,"endColumn":24},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AppProps' is defined but never used.","'handleClick' is assigned a value but never used.","'react' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'SyntheticEvent' is defined but never used.","'FormControl' is defined but never used.","'trackID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EmailIcon' is defined but never used."]